

CREATE TABLE CUSTOMER (
  Fname VARCHAR(25),
  Mname VARCHAR(25),
  Lname VARCHAR(25),
  Phone_No CHAR(10) PRIMARY KEY,
  Business_provided_till_now INTEGER,
  Birthday DATE,
  Table_Number INTEGER
);


CREATE TABLE CHEF (
  Chef_ID CHAR(6) PRIMARY KEY,
  Fname VARCHAR(25),
  Mname VARCHAR(25),
  Lname VARCHAR(25),
  Date_of_join DATE,
  Rating INTEGER CHECK (Rating >= 1 AND Rating <= 5),
  Salary INTEGER
);


CREATE TABLE CHEF_SPECIALISATION (
  Chef_ID CHAR(6),
  Dish_name VARCHAR(25),
  PRIMARY KEY (Chef_ID, Dish_name)
);

CREATE TABLE CHEF_SHIFT (
  Chef_ID CHAR(6),
  Shift_Start_time TIME,
  Shift_end_time TIME,
  PRIMARY KEY (Chef_ID, Shift_Start_time,Shift_end_time)
);

CREATE TABLE WAITER (
  Fname VARCHAR(25),
  Mname VARCHAR(25),
  Lname VARCHAR(25),
  Waiter_ID CHAR(6) PRIMARY KEY,
  Date_of_join DATE,
  Rating INTEGER CHECK (Rating BETWEEN 1 AND 5),
  Number_of_tables_served_this_month INTEGER,
  Salary INTEGER,
  Mentor_ID CHAR(6)
);


CREATE TABLE WAITER_SHIFT (
  Waiter_ID CHAR(6),
  Shift_Start_time TIME,
  Shift_end_time TIME,
  PRIMARY KEY(Waiter_ID,Shift_Start_time,Shift_end_time)
);


CREATE TABLE TABLE_INFO (
  Table_Number INTEGER PRIMARY KEY,
  Section_Type ENUM('Private Room', 'Dining', 'Terrace'),
  Seating_Capacity INTEGER,
  Status ENUM('To be cleaned', 'Waiting to be Served', 'Waiting to Order', 'Ready for Seating')
);


CREATE TABLE DISH (
  Name VARCHAR(25) PRIMARY KEY,
  Category ENUM ('Veg', 'Non-veg', 'Vegan'),
  Cuisine ENUM ('Indian', 'Italian', 'Chinese'),
  Description VARCHAR(255),
  Price INTEGER
);

CREATE TABLE DISH_REQUIREMENT (
  Dish_Name varchar(25),
  Ingredient varchar(25),
  PRIMARY KEY(Dish_Name,Ingredient)
);

CREATE Table INGREDIENT (
  Name VARCHAR(25),
  Quantity_in_hand INTEGER,
  Supplier_ID CHAR(6),
  PRIMARY KEY(Name)
);


CREATE TABLE ORDER_INFO (
  Order_Number INTEGER,
  Date DATE,
  Time TIME,
  Total_price INTEGER,
  Customer_Phone_No CHAR(10),
  Rating INTEGER CHECK (Rating BETWEEN 1 AND 10),
  Comment VARCHAR(255),
  PRIMARY KEY (Order_Number, Customer_Phone_No, Date)
);

CREATE TABLE ORDER_DISHES (
  Order_Number INTEGER,
  Date TIME,
  Customer_Phone_No CHAR(10),
  Dish_name VARCHAR(25),
  PRIMARY KEY (Order_Number, Date, Customer_Phone_No, Dish_name)
);


CREATE TABLE SUPPLIER (
  Supplier_ID CHAR(6) PRIMARY KEY,
  Fname VARCHAR(25),
  Mname VARCHAR(25),
  Lname VARCHAR(25),
  House_No VARCHAR(25),
  Street VARCHAR(127),
  Pincode INT CHECK (Pincode >= 110001 AND Pincode <= 858434),
  Phone_No CHAR(10),
  Transaction_Amount INTEGER
);

CREATE TABLE SUPPLIER_PIN (
  Pincode INTEGER CHECK (Pincode BETWEEN 110001 AND 858434) ,
  City VARCHAR(255),
  PRIMARY KEY(Pincode)
);


CREATE TABLE COMBO (
  Name VARCHAR(25),
  Dish_Name VARCHAR(25),
  Price INTEGER,
  Availability BOOLEAN,
  PRIMARY KEY (Name, Dish_Name)
);

CREATE TABLE COMBO_TYPE (
  Name VARCHAR(25),
  Dish_Name VARCHAR(25),
  Type VARCHAR(255),
  PRIMARY KEY (Name, Dish_Name, Type)
);


CREATE TABLE GIVES (
  Phone_No CHAR(10),
  Order_Number INTEGER,
  Date DATE,
  Waiter_ID CHAR(6),
  PRIMARY KEY (Phone_No, Order_Number, Date, Waiter_ID)
);


CREATE TABLE BRINGS (
  Waiter_ID CHAR(6),
  Order_Number INTEGER,
  Customer_Phone_No CHAR(10),
  Date DATE,
  Chef_ID CHAR(6),
  Table_Number INTEGER,
  PRIMARY KEY (Waiter_ID, Order_Number, Customer_Phone_No, Date, Chef_ID, Table_Number)
);


ALTER TABLE ORDER_DISHES
MODIFY COLUMN Date DATE;

ALTER TABLE TABLE_INFO
MODIFY COLUMN Status ENUM('Occupied', 'Not occupied') DEFAULT 'Not occupied';

ALTER TABLE COMBO_TYPE
MODIFY COLUMN Type ENUM('Lunch Combo', 'Dinner Combo', 'Weekend Special');

ALTER TABLE COMBO
ADD CONSTRAINT fk_combo_dish
FOREIGN KEY (Dish_Name) REFERENCES DISH(Name) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE CUSTOMER
ADD CONSTRAINT fk_customer_table
FOREIGN KEY (Table_Number) REFERENCES TABLE_INFO(Table_Number) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE GIVES ADD CONSTRAINT fk_gives_waiter FOREIGN KEY(Waiter_ID) REFERENCES WAITER(Waiter_ID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE ORDER_INFO ADD CONSTRAINT fk_orderinfo_customer FOREIGN KEY(Customer_Phone_No) REFERENCES CUSTOMER(Phone_no) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE BRINGS ADD CONSTRAINT fk_brings_waiter FOREIGN KEY(Waiter_ID) REFERENCES WAITER(Waiter_ID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE BRINGS ADD CONSTRAINT fk_brings_orderinfo1 FOREIGN KEY(Customer_Phone_No,Order_Number,Date) REFERENCES ORDER_INFO(Customer_Phone_No, Order_Number, Date) ;
ALTER TABLE BRINGS ADD CONSTRAINT fk_brings_chef FOREIGN KEY(Chef_ID) REFERENCES CHEF(Chef_ID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE BRINGS ADD CONSTRAINT fk_brings_table FOREIGN KEY(Table_Number) REFERENCES TABLE_INFO(Table_Number);
ALTER TABLE COMBO_TYPE ADD CONSTRAINT fk_combotype_combo FOREIGN KEY(Name) REFERENCES COMBO(Name) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE COMBO_TYPE ADD CONSTRAINT fk_combotype_combo2 FOREIGN KEY(Dish_Name) REFERENCES COMBO(Dish_Name) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE CHEF_SHIFT ADD CONSTRAINT fk_chefshift_chef FOREIGN KEY(Chef_ID) REFERENCES CHEF(Chef_ID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE WAITER_SHIFT ADD CONSTRAINT fk_waitershift_waiter FOREIGN KEY(Waiter_ID) REFERENCES WAITER(Waiter_ID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE CHEF_SPECIALISATION ADD CONSTRAINT fk_chefspecialisation_chef FOREIGN KEY(Chef_ID) REFERENCES CHEF(Chef_ID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE ORDER_DISHES ADD CONSTRAINT fk_orderdishes_orderinfo FOREIGN KEY(Customer_Phone_No,Order_Number,Date) REFERENCES ORDER_INFO(Customer_Phone_No, Order_Number, Date);
ALTER TABLE DISH_REQUIREMENT ADD CONSTRAINT fk_dishreq_dish FOREIGN KEY(Dish_Name) REFERENCES DISH(Name) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE DISH_REQUIREMENT ADD CONSTRAINT fk_dishreq_ing FOREIGN KEY(Ingredient) REFERENCES INGREDIENT(Name);
ALTER TABLE INGREDIENT ADD CONSTRAINT fk_ing_sup FOREIGN KEY(Supplier_ID) REFERENCES SUPPLIER(Supplier_ID) ON DELETE SET NULL ON UPDATE CASCADE;
ALTER TABLE CHEF_SPECIALISATION ADD CONSTRAINT fk_chefspec_dish FOREIGN KEY(Dish_name) REFERENCES DISH(Name) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE ORDER_DISHES ADD CONSTRAINT fk_orderdishes_dish FOREIGN KEY(Dish_name) REFERENCES DISH(Name) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE WAITER ADD CONSTRAINT fk_waiter_waiterment FOREIGN KEY(Mentor_ID) REFERENCES WAITER(Waiter_ID) ON DELETE SET NULL ON UPDATE CASCADE;
ALTER TABLE GIVES ADD CONSTRAINT fk_gives_orderinfo1 FOREIGN KEY(Phone_no, Order_Number,Date) REFERENCES ORDER_INFO(Customer_Phone_No, Order_Number,Date);
ALTER TABLE SUPPLIER ADD CONSTRAINT fk_pin_pin FOREIGN KEY(Pincode) REFERENCES SUPPLIER_PIN(Pincode);